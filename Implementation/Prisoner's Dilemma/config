[NEAT]
    # Function used to compute the termination criterion from the set of genome fitnesses. 
fitness_criterion     = max
    # when the fitness computed by fitness_criterion meets or exceeds this threshold, the evolution process will terminate.
fitness_threshold     = 2000
    # The number of individuals in each generation.
pop_size              = 25
    # if true, when all species simultaneously become extinct due to stagnation, a new random population will be created.
reset_on_extinction   = False

[DefaultGenome]
    # The default activation function attribute assigned to new nodes.
activation_default      = sigmoid
    # The probability that mutation will replace the node’s activation function with a randomly-determined member of the activation_options.
activation_mutate_rate  = 0.1
    # A space-separated list of the activation functions that may be used by nodes.
activation_options      = sigmoid

    # The default aggregation function attribute assigned to new nodes
aggregation_default     = sum
    # The probability that mutation will replace the node’s aggregation function with a randomly-determined member of the aggregation_options.
aggregation_mutate_rate = 0.0
    # A space-separated list of the aggregation functions that may be used by nodes.
aggregation_options     = sum

    # The mean of the normal/gaussian distribution, if it is used to select bias attribute values for new nodes.
bias_init_mean          = 0.0
    # The standard deviation of the normal/gaussian distribution, if it is used to select bias values for new nodes.
bias_init_stdev         = 1.0
    # The maximum allowed bias value. Biases above this value will be clamped to this value.
bias_max_value          = 2.0
    # The minimum allowed bias value. Biases below this value will be clamped to this value.
bias_min_value          = -2.0
    # The standard deviation of the zero-centered normal/gaussian distribution from which a bias value mutation is drawn.
bias_mutate_power       = 0.5
    # The probability that mutation will change the bias of a node by adding a random value.
bias_mutate_rate        = 0.7
    # The probability that mutation will replace the bias of a node with a newly chosen random value (as if it were a new node).
bias_replace_rate       = 0.1

    # The coefficient for the disjoint and excess gene counts’ contribution to the genomic distance.
compatibility_disjoint_coefficient = 1.0
    # The coefficient for each weight, bias, or response multiplier difference’s contribution to the genomic distance.
compatibility_weight_coefficient   = 0.5

    # The probability that mutation will add a connection between existing nodes.
conn_add_prob           = 0.5
    # The probability that mutation will delete an existing connection.
conn_delete_prob        = 0.5

    # The default enabled attribute of newly created connections.
enabled_default         = True
    # The probability that mutation will replace (50/50 chance of True or False) the enabled status of a connection.
enabled_mutate_rate     = 0.01

    # If this evaluates to True, generated networks will not be allowed to have recurrent connections.
feed_forward            = True
    # Specifies the initial connectivity of newly-created genomes.
initial_connection      = full_direct

    # The probability that mutation will add a new node.
node_add_prob           = 0.2
    # The probability that mutation will delete an existing node (and all connections to it).
node_delete_prob        = 0.2

    # The number of hidden nodes to add to each genome in the initial population.
num_hidden              = 6
    # The number of input nodes, through which the network receives inputs.
num_inputs              = 3
    # The number of output nodes, to which the network delivers outputs.
num_outputs             = 2

    # The mean of the normal/gaussian distribution, if it is used to select response multiplier attribute values for new nodes.
response_init_mean      = 1.0
    # The standard deviation of the normal/gaussian distribution, if it is used to select response multipliers for new nodes.
response_init_stdev     = 0.0
    # The maximum allowed response multiplier. Response multipliers above this value will be clamped to this value.
response_max_value      = 2.0
    # The minimum allowed response multiplier. Response multipliers below this value will be clamped to this value.
response_min_value      = -2.0
    # The standard deviation of the zero-centered normal/gaussian distribution from which a response multiplier mutation is drawn.
response_mutate_power   = 0.0
    # The probability that mutation will change the response multiplier of a node by adding a random value.
response_mutate_rate    = 0.0
    # The probability that mutation will replace the response multiplier of a node with a newly chosen random value (as if it were a new node).
response_replace_rate   = 0.0

    # The mean of the normal/gaussian distribution used to select weight attribute values for new connections.
weight_init_mean        = 0.0
    # The standard deviation of the normal/gaussian distribution used to select weight values for new connections.
weight_init_stdev       = 1.0
    # The maximum allowed weight value. Weights above this value will be clamped to this value.
weight_max_value        = 1
    # The minimum allowed weight value. Weights below this value will be clamped to this value.
weight_min_value        = -1
    # The standard deviation of the zero-centered normal/gaussian distribution from which a weight value mutation is drawn.
weight_mutate_power     = 0.5
    # The probability that mutation will change the weight of a connection by adding a random value.
weight_mutate_rate      = 0.8
    # The probability that mutation will replace the weight of a connection with a newly chosen random value (as if it were a new connection).
weight_replace_rate     = 0.1

[DefaultSpeciesSet]
compatibility_threshold = 3.0

[DefaultStagnation]
    # The function used to compute species fitness. This defaults to mean.
species_fitness_func = max
    # Species that have not shown improvement in more than this number of generations will be considered stagnant and removed.
max_stagnation       = 20
    # The number of species that will be protected from stagnation.
species_elitism      = 2

[DefaultReproduction]
    # The number of most-fit individuals in each species that will be preserved as-is from one generation to the next.
elitism            = 2
    # The fraction for each species allowed to reproduce each generation.
survival_threshold = 0.2